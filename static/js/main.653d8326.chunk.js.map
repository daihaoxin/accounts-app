{"version":3,"sources":["utils/axios.js","components/AmountBox.js","components/Record.js","service/index.js","components/RecordForm.js","components/Records.js","serviceWorker.js","index.js"],"names":["axios","defaults","baseURL","process","REACT_APP_API_URL","interceptors","response","use","error","status","message","concat","config","url","isShowNormalError","setTimeout","alert","window","Promise","reject","hideNormalError","AmountBox","_ref","text","type","amount","react_default","a","createElement","className","Record","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isEdit","record","data","handleDelete","bind","assertThisInitialized","handleChange","handleEdit","nextProps","nextContext","setState","event","_event$target","target","value","name","objectSpread","defineProperty","_this2","put","id","then","update","updateIsEdit","recordId","_this3","delete","_this$state","placeholder","date","onChange","title","onClick","Component","RecordForm","submitStatus","submit","_this2$state$record","preventDefault","post","createRecord","Number","parseInt","addRecord","catch","console","log","onSubmit","disabled","Records","apply","arguments","records","isLoading","toConsumableArray","filter","item","map","credits","reduce","prev","curr","debits","get","RecordsComponent","components_Record","key","components_AmountBox","balance","components_RecordForm","Boolean","location","hostname","match","ReactDOM","render","components_Records","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.653d8326.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n// 添加响应拦截器\naxios.interceptors.response.use(function (response) {\n    // 对响应数据做点什么\n    // console.log(response.status);\n    // console.log(response.statusText);\n    // console.log(response, \"222\");\n    \n    // let { code, msg } = response.data;\n    // let ret = msg;\n    \n    // if (code === 1) {\n    //     return response.data;\n    // }\n    //\n    // this.setState({ signUpMsg: ret });\n    //\n    // if (code === 0) {\n    //     setTimeout(() => {\n    //         this.initMyInfo(ret.data);\n    //     });\n    // }\n    return response;\n}, function (error) {\n    if (error.response) {\n        switch (error.response.status) {\n            case 400:\n                error.message = \"请求错误\";\n                break;\n            case 401:\n                error.message = \"未授权，请登录\";\n                break;\n            case 403:\n                error.message = \"拒绝访问\";\n                break;\n            case 404:\n                error.message = `请求地址出错: ${error.response.config.url}`;\n                break;\n            case 408:\n                error.message = \"请求超时\";\n                break;\n            case 500:\n                error.message = \"服务器内部错误\";\n                break;\n            case 501:\n                error.message = \"服务未实现\";\n                break;\n            case 502:\n                error.message = \"网关错误\";\n                break;\n            case 503:\n                error.message = \"服务不可用\";\n                break;\n            case 504:\n                error.message = \"网关超时\";\n                break;\n            case 505:\n                error.message = \"HTTP版本不受支持\";\n                break;\n            default:\n                error.message = \"未知错误\";\n        }\n    } else {\n        error.message = \"未知网络错误，请联系管理员\";\n    }\n    // 对响应错误做点什么\n    let isShowNormalError = true;\n    const hideNormalError = function () {\n        isShowNormalError = false;\n    };\n    \n    setTimeout(() => {\n        if (isShowNormalError) {\n            alert(error.message);\n        }\n    });\n    return window.Promise.reject({ error, hideNormalError }); // 在error.response上添加方法\n});\nexport default axios;\n","import React from \"react\";\n\nconst AmountBox = ({ text, type, amount }) => {\n    return (\n        <div className=\"col\">\n            <div className=\"card\">\n                <div className={`card-header bg-${type} text-white`}>\n                    {text}\n                </div>\n                <div className=\"card-body\">\n                    {amount}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AmountBox;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { updateRecord, deleteRecord } from \"../service\";\n\nclass Record extends Component {\n    static propTypes = {\n        date: PropTypes.string,\n        title: PropTypes.string,\n        amount: PropTypes.number\n    };\n    state = {\n        isEdit: false,\n        record: this.props.data\n    };\n    \n    constructor(props) {\n        super(props);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n    }\n    \n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            record: nextProps.data\n        });\n    }\n    \n    handleChange(event) {\n        let { value, name } = event.target;\n        this.setState({\n            record: {\n                ...this.state.record,\n                [\"\" + name]: value\n            }\n        });\n    }\n    \n    handleEdit() {\n        if (!this.state.isEdit) {\n            this.updateIsEdit();\n        } else {\n            updateRecord(this.state.record)\n                .then((response) => {\n                    this.props.update(response.data);\n                    this.updateIsEdit();\n                });\n        }\n    }\n    \n    updateIsEdit() {\n        this.setState({\n            isEdit: !this.state.isEdit\n        });\n    }\n    \n    handleDelete() {\n        if (this.state.isEdit) {\n            this.updateIsEdit();\n        } else {\n            deleteRecord(this.state.record.id)\n                .then((response)=>{\n                    this.props.delete(response.data.id);\n                })\n        }\n    }\n    \n    render() {\n        let { isEdit, record } = this.state;\n        return (\n            <tr>\n                <td>\n                    {\n                        isEdit ?\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Date\"\n                                name=\"date\"\n                                value={record.date}\n                                onChange={this.handleChange}\n                            />\n                            :\n                            record.date\n                    }\n                </td>\n                <td>\n                    {\n                        isEdit ?\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Title\"\n                                name=\"title\"\n                                value={record.title}\n                                onChange={this.handleChange}\n                            />\n                            :\n                            record.title\n                    }\n                </td>\n                <td>\n                    {\n                        isEdit ?\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Amount\"\n                                name=\"amount\"\n                                value={record.amount}\n                                onChange={this.handleChange}\n                            />\n                            :\n                            record.amount\n                    }</td>\n                <td>\n                    <button\n                        className=\"btn btn-primary mr-2\"\n                        onClick={this.handleEdit}\n                    >\n                        {isEdit ? \"update\" : \"Edit\"}\n                    </button>\n                    <button\n                        className=\"btn btn-danger\"\n                        onClick={this.handleDelete}\n                    >\n                        {isEdit ? \"Cancel\" : \"Delete\"}\n                    </button>\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default Record;","import axios from \"../utils/axios\";\n\n\nfunction getAll() {\n    return axios.get(\"/records\");\n}\n\nfunction createRecord(record) {\n    return axios.post(\"/records\", record);\n}\n\nfunction updateRecord(record) {\n    return axios.put(`/records/${record.id}`, record);\n}\n\nfunction deleteRecord(recordId) {\n    return axios.delete(`/records/${recordId}`);\n}\n\nexport { getAll, createRecord, updateRecord, deleteRecord };","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createRecord, updateRecord } from \"../service\";\n\nclass RecordForm extends Component {\n    static propTypes = {};\n    state = {\n        record: {\n            date: \"\",\n            title: \"\",\n            amount: \"\"\n        },\n        submitStatus: false\n    };\n    \n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n    \n    handleChange(event) {\n        let { value, name } = event.target;\n        this.setState({\n            record: {\n                ...this.state.record,\n                [\"\" + name]: value\n            }\n        }, () => {\n            let { record: { date, title, amount } } = this.state;\n            this.setState({\n                submitStatus: date && title && amount\n            });\n        });\n    }\n    \n    submit(event) {\n        event.preventDefault();\n        let { record } = this.state;\n        createRecord({ ...record, amount: Number.parseInt(record.amount, 10) })\n            .then((response) => {\n                this.props.addRecord(response.data);\n                this.setState({\n                    record: {\n                        date: \"\",\n                        title: \"\",\n                        amount: \"\"\n                    },\n                    submitStatus: false\n                });\n            })\n            .catch(({ error, hideNormalError }) => {\n                hideNormalError();\n                console.log(error);\n            });\n    }\n    \n    render() {\n        let { record, submitStatus } = this.state;\n        return (\n            <form onSubmit={this.submit} className=\"form-inline mb-3\">\n                <div className=\"form-group mr-2\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Date\"\n                        name=\"date\"\n                        value={record.date}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                <div className=\"form-group mr-2\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Title\"\n                        name=\"title\"\n                        value={record.title}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                <div className=\"form-group mr-2\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Amount\"\n                        name=\"amount\"\n                        value={record.amount}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                <button className=\"btn btn-primary\" disabled={!submitStatus}>Create Record</button>\n            </form>\n        );\n    }\n}\n\nexport default RecordForm;","import React, { Component } from \"react\";\nimport { getAll } from \"../service\";\nimport AmountBox from \"./AmountBox\";\nimport Record from \"./Record\";\nimport RecordForm from \"./RecordForm\";\n\n// import { getJSON } from \"jquery\";\n\nclass Records extends Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            records: [],\n            error: null,\n            isLoading: true\n        };\n        \n        this.addRecord = this.addRecord.bind(this);\n        this.update = this.update.bind(this);\n        this.delete = this.delete.bind(this);\n    }\n    \n    addRecord(record) {\n        this.setState({\n            records: [...this.state.records, record]\n        });\n    }\n    \n    delete(recordId) {\n        this.setState({\n            records: this.state.records.filter((item) => {\n                return item.id !== recordId;\n            })\n        });\n    }\n    \n    update(record) {\n        this.setState({\n            records: this.state.records.map((item) => {\n                if (item.id === record.id) {\n                    item = record;\n                }\n                return item;\n            })\n        });\n    }\n    \n    credits() {\n        let credits = this.state.records.filter((record) => {\n            return record.amount >= 0;\n        });\n        \n        return credits.reduce((prev, curr) => {\n            return prev + Number.parseInt(curr.amount, 0);\n        }, 0);\n    }\n    \n    debits() {\n        let credits = this.state.records.filter((record) => {\n            return record.amount < 0;\n        });\n        \n        return credits.reduce((prev, curr) => {\n            return prev + Number.parseInt(curr.amount, 0);\n        }, 0);\n    }\n    \n    balance() {\n        return this.credits() + this.debits();\n    }\n    \n    componentDidMount() {\n        getAll().then((response) => {\n            this.setState({\n                records: response.data,\n                isLoading: false,\n            });\n        }).catch(({ hideNormalError, error }) => {\n            hideNormalError();\n            this.setState({\n                error,\n                isLoading: false,\n            });\n        });\n    }\n    \n    render() {\n        let { error, isLoading, records } = this.state;\n        let RecordsComponent = null;\n        if (error) {\n            RecordsComponent = (<div>Error: {error.message}</div>);\n        } else if (isLoading) {\n            RecordsComponent = (<div>loading...</div>);\n        } else {\n            RecordsComponent = (\n                <table className=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th>Date</th>\n                            <th>Title</th>\n                            <th>Amount</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            records.map((item) => {\n                                return (\n                                    <Record\n                                        delete={this.delete}\n                                        update={this.update}\n                                        data={item}\n                                        key={item.id}\n                                    />\n                                );\n                            })\n                        }\n                    </tbody>\n                </table>\n            );\n        }\n        \n        return (\n            <div>\n                <h2>Records</h2>\n                <div className=\"row mb-3\">\n                    <AmountBox text=\"Credit\" type=\"success\" amount={this.credits()} />\n                    <AmountBox text=\"Debit\" type=\"danger\" amount={this.debits()} />\n                    <AmountBox text=\"Balance\" type=\"info\" amount={this.balance()} />\n                </div>\n                <RecordForm addRecord={this.addRecord} />\n                {RecordsComponent}\n            </div>\n        );\n    }\n}\n\nexport default Records;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Home is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Records from './components/Records';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Records />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}